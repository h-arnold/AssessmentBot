/**
 * ImageRequestManager Class
 *
 * Handles uploading images to the image upload service.
 */
class ImageRequestManager extends BaseRequestManager {
  constructor() {
    super();
    this.configurationManager = new ConfigurationManager();
    this.uploadUrl = this.configurationManager.getImageUploadUrl();
    this.apiKey = this.configurationManager.getImageUploaderApiKey();
  }

  /**
   * Uploads an image Blob and returns the URL.
   * @param {Blob} imageBlob - The image Blob to upload.
   * @return {string} - The URL of the uploaded image.
   */
  uploadImage(imageBlob) {
    const base64Image = Utilities.base64Encode(imageBlob.getBytes());
    const payload = {
      apiKey: this.apiKey,
      image: base64Image
    };
    const request = {
      url: this.uploadUrl,
      method: 'post',
      contentType: 'application/json',
      payload: JSON.stringify(payload),
      muteHttpExceptions: true
    };
    try {
      const response = this.sendRequestWithRetries(request);
      const responseData = JSON.parse(response.getContentText());
      if (responseData && responseData.url) {
        console.log(`Returned image URL is: ${responseData.url}`)
        return responseData.url;
      } else {
        throw new Error('Invalid response from image upload service.');
      }
    } catch (error) {
      console.error('Error uploading image:', error);
      throw new Error('Failed to upload image.');
    }
  }
}
